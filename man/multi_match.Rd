% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multi_match.R
\name{multi_match}
\alias{multi_match}
\title{Multiple pattern matching}
\usage{
multi_match(
  strings,
  patterns,
  replacements,
  ignore_case = TRUE,
  compress = TRUE,
  first = TRUE
)
}
\arguments{
\item{strings}{A vector of string to be matched}

\item{patterns}{A vector of patterns to match}

\item{replacements}{Replacement label vector of the same length as \code{patterns}. If missing, \code{patterns} is used.}

\item{ignore_case}{Should case be ignored in regular expression matching?}

\item{compress}{If \code{TRUE}, returns the first matched pattern (or label). Otherwise, returns a \code{tibble} of matches for each pattern}

\item{first}{If \code{TRUE}, then the first match is returned otherwise the last is returned. This is ignored if \code{compress = FALSE}.}
}
\value{
If \code{compress = TRUE}, returns a character vector. Otherwise, returns a tibble.
}
\description{
Match a character vector on multiple patterns.
}
\examples{
strings = c('abcde', 'bc', 'def', 'gjab', 'xyz')
patterns = c('ab', 'de', 'bc')
replacements = toupper(patterns)

# Find the first match of each pattern:
multi_match(
  string = strings,
  patterns = patterns,
  replacements = replacements
)

# Make flags for matching each pattern:
multi_match(
  strings = strings,
  patterns = patterns,
  compress = FALSE
)

}
\author{
Sven Halvorson
}
